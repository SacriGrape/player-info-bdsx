"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomForm = exports.ModalForm = exports.SimpleForm = exports.FormInput = exports.FormDropdown = exports.FormStepSlider = exports.FormSlider = exports.FormToggle = exports.FormLabel = exports.FormButton = void 0;
const bdsx_1 = require("bdsx");
const packets_1 = require("./packets");
const formMaps = new Map();
class FormButton {
    constructor(text, imageType, imagePath = "") {
        this.text = text;
        if (imageType) {
            this.image = {
                type: imageType,
                data: imagePath,
            };
        }
    }
}
exports.FormButton = FormButton;
class FormComponent {
    constructor(text) {
        this.text = text;
    }
}
class FormLabel extends FormComponent {
    constructor(text) {
        super(text);
        this.type = "label";
    }
}
exports.FormLabel = FormLabel;
class FormToggle extends FormComponent {
    constructor(text, defaultValue) {
        super(text);
        this.type = "toggle";
        if (defaultValue)
            this.default = defaultValue;
    }
}
exports.FormToggle = FormToggle;
class FormSlider extends FormComponent {
    constructor(text, min, max, step, defaultValue) {
        super(text);
        this.type = "slider";
        this.min = min;
        this.max = max;
        if (step)
            this.step = step;
        if (defaultValue)
            this.default = defaultValue;
    }
}
exports.FormSlider = FormSlider;
class FormStepSlider extends FormComponent {
    constructor(text, steps, defaultIndex) {
        super(text);
        this.type = "step_slider";
        this.steps = steps;
        if (defaultIndex)
            this.default = defaultIndex;
    }
}
exports.FormStepSlider = FormStepSlider;
class FormDropdown extends FormComponent {
    constructor(text, options, defaultIndex) {
        super(text);
        this.type = "dropdown";
        this.options = options;
        if (defaultIndex)
            this.default = defaultIndex;
    }
}
exports.FormDropdown = FormDropdown;
class FormInput extends FormComponent {
    constructor(text, placeholder, defaultValue) {
        super(text);
        this.type = "input";
        if (placeholder)
            this.placeholder = placeholder;
        if (defaultValue)
            this.default = defaultValue;
    }
}
exports.FormInput = FormInput;
class Form {
    constructor() {
        this.externalLoading = false;
        this.labels = new Map();
        this.id = -1;
        this.callback = null;
        this.data = {
            type: "form",
            title: "",
            content: "",
        };
    }
    sendTo(target, callback) {
        this.id = Math.floor(Math.random() * 2147483647) + 1;
        this.callback = callback !== null && callback !== void 0 ? callback : null;
        const pk = packets_1.ShowModalFormPacket.create();
        pk.id = this.id;
        pk.content = JSON.stringify(this);
        pk.sendTo(target);
        pk.dispose();
        formMaps.set(this.id, this);
        if (this.externalLoading) {
            setTimeout(() => {
                const pk = packets_1.SetTitlePacket.create();
                pk.sendTo(target);
                pk.dispose();
            }, 100);
        }
        return this.id;
    }
    toJSON() {
        return this.data;
    }
}
class SimpleForm extends Form {
    constructor(title = "", content = "", buttons = []) {
        var _a;
        super();
        this.data.type = "form";
        this.data.title = title;
        this.data.content = content;
        this.data.buttons = buttons;
        for (const button of buttons) {
            if (((_a = button.image) === null || _a === void 0 ? void 0 : _a.type) === "url")
                this.externalLoading = true;
        }
    }
    getTitle() {
        return this.data.title;
    }
    setTitle(title) {
        this.data.title = title;
    }
    getContent() {
        return this.data.content;
    }
    setContent(content) {
        this.data.content = content;
    }
    addButton(button, label) {
        var _a;
        this.data.buttons.push(button);
        if (((_a = button.image) === null || _a === void 0 ? void 0 : _a.type) === "url")
            this.externalLoading = true;
        if (label)
            this.labels.set(this.data.buttons.length - 1, label);
    }
    getButton(indexOrLabel) {
        if (typeof indexOrLabel === "string") {
            for (const [index, label] of this.labels) {
                if (label === indexOrLabel)
                    return this.data.buttons[index];
            }
        }
        else {
            return this.data.buttons[indexOrLabel];
        }
        return null;
    }
}
exports.SimpleForm = SimpleForm;
class ModalForm extends Form {
    constructor(title = "", content = "") {
        super();
        this.data.type = "modal";
        this.data.title = title;
        this.data.content = content;
        this.data.button1 = "";
        this.data.button2 = "";
    }
    getTitle() {
        return this.data.title;
    }
    setTitle(title) {
        this.data.title = title;
    }
    getContent() {
        return this.data.content;
    }
    setContent(content) {
        this.data.content = content;
    }
    getButtonConfirm() {
        var _a;
        return (_a = this.data.button1) !== null && _a !== void 0 ? _a : null;
    }
    setButtonConfirm(text) {
        this.data.button1 = text;
    }
    getButtonCancel() {
        var _a;
        return (_a = this.data.button2) !== null && _a !== void 0 ? _a : null;
    }
    setButtonCancel(text) {
        this.data.button2 = text;
    }
}
exports.ModalForm = ModalForm;
class CustomForm extends Form {
    constructor(title = "", content = []) {
        super();
        this.data.type = "custom_form";
        this.data.title = title;
        this.data.content = [];
    }
    getTitle() {
        return this.data.title;
    }
    setTitle(title) {
        this.data.title = title;
    }
    addComponent(component, label) {
        this.data.content.push(component);
        if (label)
            this.labels.set(this.data.content.length - 1, label);
    }
    getComponent(indexOrLabel) {
        if (typeof indexOrLabel === "string") {
            for (const [index, label] of this.labels) {
                if (label === indexOrLabel)
                    return this.data.content[index];
            }
        }
        else {
            return this.data.content[indexOrLabel];
        }
        return null;
    }
}
exports.CustomForm = CustomForm;
bdsx_1.nethook.after(bdsx_1.MinecraftPacketIds.ModalFormResponse).on((pk, ni) => {
    var _a;
    const form = formMaps.get(pk.id);
    const response = JSON.parse(pk.response);
    if (form === null || form === void 0 ? void 0 : form.callback) {
        switch (form.data.type) {
            case "form":
                form.response = (_a = form.labels.get(response)) !== null && _a !== void 0 ? _a : response;
                form.callback(form, ni);
                break;
            case "modal":
                form.response = response;
                form.callback(form, ni);
                break;
            case "custom_form":
                if (response !== null) {
                    for (const [index, label] of form.labels) {
                        response[label] = response[index];
                    }
                }
                form.response = response;
                form.callback(form, ni);
                break;
        }
    }
    formMaps.delete(pk.id);
});
//# sourceMappingURL=data:application/json;base64,