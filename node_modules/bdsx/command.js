"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hook = exports.command = exports.net = exports.hookingForCommand = void 0;
const krevent_1 = require("krevent");
const command_1 = require("./bds/command");
const packetids_1 = require("./bds/packetids");
const proc_1 = require("./bds/proc");
const common_1 = require("./common");
const makefunc_1 = require("./makefunc");
const nethook_1 = require("./nethook");
const sharedpointer_1 = require("./sharedpointer");
const util_1 = require("./util");
function hookingForCommand() {
    const executeCommandOriginal = proc_1.procHacker.hooking('MinecraftCommands::executeCommand', command_1.MCRESULT, null, command_1.MinecraftCommands, command_1.MCRESULT, sharedpointer_1.SharedPtr.make(command_1.CommandContext), makefunc_1.RawTypeId.Boolean)((cmd, res, ctxptr, b) => {
        const ctx = ctxptr.p;
        const name = ctx.origin.getName();
        const resv = hookev.fire(ctxptr.p.command, name, ctx);
        switch (typeof resv) {
            case 'number':
                res.result = resv;
                util_1._tickCallback();
                return res;
            default:
                util_1._tickCallback();
                return executeCommandOriginal(cmd, res, ctxptr, b);
        }
    });
}
exports.hookingForCommand = hookingForCommand;
class CommandEventImpl {
    constructor(command, networkIdentifier) {
        this.command = command;
        this.networkIdentifier = networkIdentifier;
        this.isModified = false;
    }
    setCommand(command) {
        this.isModified = true;
        this.command = command;
    }
}
class UserCommandEvents extends krevent_1.EventEx {
    constructor() {
        super(...arguments);
        this.listener = (ptr, networkIdentifier, packetId) => {
            const command = ptr.command;
            const ev = new CommandEventImpl(command, networkIdentifier);
            if (this.fire(ev) === common_1.CANCEL)
                return common_1.CANCEL;
            if (ev.isModified) {
                ptr.command = ev.command;
            }
        };
    }
    onStarted() {
        nethook_1.nethook.before(packetids_1.MinecraftPacketIds.CommandRequest).on(this.listener);
    }
    onCleared() {
        nethook_1.nethook.before(packetids_1.MinecraftPacketIds.CommandRequest).remove(this.listener);
    }
}
const hookev = new krevent_1.default();
/** @deprecated use nethook.before(MinecraftPacketIds.CommandRequest).on */
exports.net = new UserCommandEvents();
var command;
(function (command) {
    command.hook = hookev;
})(command = exports.command || (exports.command = {}));
/**
 * @deprecated use command.hook
 */
exports.hook = hookev;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvbW1hbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EscUNBQXdEO0FBQ3hELDJDQUE0RTtBQUU1RSwrQ0FBcUQ7QUFFckQscUNBQXdDO0FBQ3hDLHFDQUFrQztBQUNsQyx5Q0FBdUM7QUFDdkMsdUNBQW9DO0FBQ3BDLG1EQUE0QztBQUM1QyxpQ0FBdUM7QUFFdkMsU0FBZ0IsaUJBQWlCO0lBQzdCLE1BQU0sc0JBQXNCLEdBQUcsaUJBQVUsQ0FBQyxPQUFPLENBQUMsbUNBQW1DLEVBQUUsa0JBQVEsRUFBRSxJQUFJLEVBQ2pHLDJCQUFpQixFQUFFLGtCQUFRLEVBQUUseUJBQVMsQ0FBQyxJQUFJLENBQUMsd0JBQWMsQ0FBQyxFQUFFLG9CQUFTLENBQUMsT0FBTyxDQUFDLENBQy9FLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFDLEVBQUU7UUFDbkIsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLENBQUUsQ0FBQztRQUN0QixNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2xDLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZELFFBQVEsT0FBTyxJQUFJLEVBQUU7WUFDckIsS0FBSyxRQUFRO2dCQUNULEdBQUcsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO2dCQUNsQixvQkFBYSxFQUFFLENBQUM7Z0JBQ2hCLE9BQU8sR0FBRyxDQUFDO1lBQ2Y7Z0JBQ0ksb0JBQWEsRUFBRSxDQUFDO2dCQUNoQixPQUFPLHNCQUFzQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ3REO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDWCxDQUFDO0FBakJELDhDQWlCQztBQVNELE1BQU0sZ0JBQWdCO0lBR2xCLFlBQ1csT0FBZSxFQUNmLGlCQUFvQztRQURwQyxZQUFPLEdBQVAsT0FBTyxDQUFRO1FBQ2Ysc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQUp4QyxlQUFVLEdBQUcsS0FBSyxDQUFDO0lBTTFCLENBQUM7SUFFRCxVQUFVLENBQUMsT0FBZTtRQUN0QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUMzQixDQUFDO0NBQ0o7QUFJRCxNQUFNLGlCQUFrQixTQUFRLGlCQUE0QjtJQUE1RDs7UUFDcUIsYUFBUSxHQUFHLENBQUMsR0FBeUIsRUFBRSxpQkFBb0MsRUFBRSxRQUE0QixFQUFjLEVBQUU7WUFDdEksTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQztZQUM1QixNQUFNLEVBQUUsR0FBRyxJQUFJLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1lBQzVELElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxlQUFNO2dCQUFFLE9BQU8sZUFBTSxDQUFDO1lBQzVDLElBQUksRUFBRSxDQUFDLFVBQVUsRUFBRTtnQkFDZixHQUFHLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUM7YUFDNUI7UUFDTCxDQUFDLENBQUM7SUFRTixDQUFDO0lBTkcsU0FBUztRQUNMLGlCQUFPLENBQUMsTUFBTSxDQUFDLDhCQUFrQixDQUFDLGNBQWMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUNELFNBQVM7UUFDTCxpQkFBTyxDQUFDLE1BQU0sQ0FBQyw4QkFBa0IsQ0FBQyxjQUFjLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVFLENBQUM7Q0FDSjtBQUVELE1BQU0sTUFBTSxHQUFHLElBQUksaUJBQUssRUFBdUIsQ0FBQztBQUVoRCwyRUFBMkU7QUFDOUQsUUFBQSxHQUFHLEdBQUcsSUFBSSxpQkFBaUIsRUFBd0MsQ0FBQztBQUVqRixJQUFpQixPQUFPLENBR3ZCO0FBSEQsV0FBaUIsT0FBTztJQUVQLFlBQUksR0FBRyxNQUE0QyxDQUFDO0FBQ3JFLENBQUMsRUFIZ0IsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBR3ZCO0FBRUQ7O0dBRUc7QUFDVSxRQUFBLElBQUksR0FBRyxNQUE0QyxDQUFDIn0=