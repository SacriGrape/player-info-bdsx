"use strict";
/**
 * on progressing
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const bdsx_1 = require("bdsx");
const command_1 = require("bdsx/bds/command");
const server_1 = require("bdsx/bds/server");
const makefunc_1 = require("bdsx/makefunc");
const nativeclass_1 = require("bdsx/nativeclass");
const nativetype_1 = require("bdsx/nativetype");
class Command extends nativeclass_1.NativeClass {
    static makeAllocator() {
        const cls = this;
        const size = cls[nativetype_1.NativeType.size];
        if (!size)
            throw Error(`${cls.name}: size is not defined`);
        return makefunc_1.makefunc.np((returnval) => {
            const ptr = bdsx_1.capi.malloc(size);
            const cmd = ptr.as(cls);
            returnval.setPointer(cmd);
            return returnval;
        }, bdsx_1.StaticPointer, null, bdsx_1.StaticPointer);
    }
}
(function (Command) {
    class VFTable extends nativeclass_1.NativeClass {
    }
    Command.VFTable = VFTable;
})(Command || (Command = {}));
Command.define({
    vftable: Command.VFTable,
    u1: bdsx_1.VoidPointer,
}, 0x20);
class CustomCommand extends Command {
}
const COL_SIG_REV0 = 0;
const COL_SIG_REV1 = 1;
let _s_RTTICompleteObjectLocator = class _s_RTTICompleteObjectLocator extends nativeclass_1.NativeClass {
};
tslib_1.__decorate([
    nativeclass_1.nativeField(nativetype_1.int32_t)
], _s_RTTICompleteObjectLocator.prototype, "signature", void 0);
tslib_1.__decorate([
    nativeclass_1.nativeField(nativetype_1.int32_t)
], _s_RTTICompleteObjectLocator.prototype, "offset", void 0);
tslib_1.__decorate([
    nativeclass_1.nativeField(nativetype_1.int32_t)
], _s_RTTICompleteObjectLocator.prototype, "cdOffset", void 0);
tslib_1.__decorate([
    nativeclass_1.nativeField(nativetype_1.int32_t)
], _s_RTTICompleteObjectLocator.prototype, "pTypeDescriptor", void 0);
tslib_1.__decorate([
    nativeclass_1.nativeField(nativetype_1.int32_t)
], _s_RTTICompleteObjectLocator.prototype, "pClassDescriptor", void 0);
tslib_1.__decorate([
    nativeclass_1.nativeField(nativetype_1.int32_t)
], _s_RTTICompleteObjectLocator.prototype, "pSelf", void 0);
_s_RTTICompleteObjectLocator = tslib_1.__decorate([
    nativeclass_1.nativeClass()
], _s_RTTICompleteObjectLocator);
// import './example_and_test'; // remove this if it's not necessary for you
// commands.list.description
const cmdreg = server_1.serverInstance.minecraft.commands.registry;
cmdreg.registerCommand('testcommand', 'test command', command_1.CommandPermissionLevel.Normal, 8, 40);
const cmd = cmdreg.findCommand('testcommand');
const overload = new command_1.CommandRegistry.Overload(true);
overload.commandVersion = bdsx_1.bin.make64(1, 0x7fffffff);
overload.allocator = CustomCommand.makeAllocator();
overload.u3 = nativetype_1.bin64_t.zero;
overload.u4 = nativetype_1.bin64_t.zero;
overload.u5 = nativetype_1.bin64_t.zero;
overload.u6 = -1;
cmd.overloads.push(overload);
cmdreg.registerOverloadInternal(cmd, overload);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZGxpc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjb21tYW5kbGlzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7OztBQUVILCtCQUE2RDtBQUM3RCw4Q0FBMkU7QUFDM0UsNENBQWlEO0FBQ2pELDRDQUF5QztBQUN6QyxrREFBMEY7QUFDMUYsZ0RBQStEO0FBRS9ELE1BQU0sT0FBUSxTQUFRLHlCQUFXO0lBSTdCLE1BQU0sQ0FBQyxhQUFhO1FBQ2hCLE1BQU0sR0FBRyxHQUFHLElBQWdDLENBQUM7UUFDN0MsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLHVCQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLEtBQUssQ0FBQyxHQUFHLEdBQUcsQ0FBQyxJQUFJLHVCQUF1QixDQUFDLENBQUM7UUFDM0QsT0FBTyxtQkFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQXVCLEVBQUMsRUFBRTtZQUMxQyxNQUFNLEdBQUcsR0FBRyxXQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzlCLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUM7WUFFeEIsU0FBUyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMxQixPQUFPLFNBQVMsQ0FBQztRQUNyQixDQUFDLEVBQUUsb0JBQWEsRUFBRSxJQUFJLEVBQUUsb0JBQWEsQ0FBQyxDQUFDO0lBQzNDLENBQUM7Q0FDSjtBQUNELFdBQVUsT0FBTztJQUNiLE1BQWEsT0FBUSxTQUFRLHlCQUFXO0tBSXZDO0lBSlksZUFBTyxVQUluQixDQUFBO0FBQ0wsQ0FBQyxFQU5TLE9BQU8sS0FBUCxPQUFPLFFBTWhCO0FBQ0QsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUNYLE9BQU8sRUFBRSxPQUFPLENBQUMsT0FBTztJQUN4QixFQUFFLEVBQUUsa0JBQVc7Q0FDbEIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUVULE1BQU0sYUFBYyxTQUFRLE9BQU87Q0FDbEM7QUFFRCxNQUFNLFlBQVksR0FBRyxDQUFDLENBQUM7QUFDdkIsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFDO0FBR3ZCLElBQU0sNEJBQTRCLEdBQWxDLE1BQU0sNEJBQTZCLFNBQVEseUJBQVc7Q0FhckQsQ0FBQTtBQVhHO0lBREMseUJBQVcsQ0FBQyxvQkFBTyxDQUFDOytEQUNIO0FBRWxCO0lBREMseUJBQVcsQ0FBQyxvQkFBTyxDQUFDOzREQUNOO0FBRWY7SUFEQyx5QkFBVyxDQUFDLG9CQUFPLENBQUM7OERBQ0o7QUFFakI7SUFEQyx5QkFBVyxDQUFDLG9CQUFPLENBQUM7cUVBQ0c7QUFFeEI7SUFEQyx5QkFBVyxDQUFDLG9CQUFPLENBQUM7c0VBQ0k7QUFFekI7SUFEQyx5QkFBVyxDQUFDLG9CQUFPLENBQUM7MkRBQ1A7QUFaWiw0QkFBNEI7SUFEakMseUJBQVcsRUFBRTtHQUNSLDRCQUE0QixDQWFqQztBQUVELDRFQUE0RTtBQUU1RSw0QkFBNEI7QUFDNUIsTUFBTSxNQUFNLEdBQUcsdUJBQWMsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztBQUMxRCxNQUFNLENBQUMsZUFBZSxDQUFDLGFBQWEsRUFBRSxjQUFjLEVBQUUsZ0NBQXNCLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUM1RixNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBRSxDQUFDO0FBQy9DLE1BQU0sUUFBUSxHQUFHLElBQUkseUJBQWUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDcEQsUUFBUSxDQUFDLGNBQWMsR0FBRyxVQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUMsQ0FBQztBQUNwRCxRQUFRLENBQUMsU0FBUyxHQUFHLGFBQWEsQ0FBQyxhQUFhLEVBQUUsQ0FBQztBQUNuRCxRQUFRLENBQUMsRUFBRSxHQUFHLG9CQUFPLENBQUMsSUFBSSxDQUFDO0FBQzNCLFFBQVEsQ0FBQyxFQUFFLEdBQUcsb0JBQU8sQ0FBQyxJQUFJLENBQUM7QUFDM0IsUUFBUSxDQUFDLEVBQUUsR0FBRyxvQkFBTyxDQUFDLElBQUksQ0FBQztBQUMzQixRQUFRLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ2pCLEdBQUcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzdCLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUMifQ==