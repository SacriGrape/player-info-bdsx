"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.events = void 0;
const bdsx_1 = require("bdsx");
const block_1 = require("bdsx/bds/block");
const blockpos_1 = require("bdsx/bds/blockpos");
const gamemode_1 = require("bdsx/bds/gamemode");
const inventory_1 = require("bdsx/bds/inventory");
const player_1 = require("bdsx/bds/player");
const proc_1 = require("bdsx/bds/proc");
const common_1 = require("bdsx/common");
const core_1 = require("bdsx/core");
const krevent_1 = require("krevent");
class BlockDestroyEvent {
    constructor(player, blockPos) {
        this.player = player;
        this.blockPos = blockPos;
    }
}
function onBlockDestroy(survivalMode, blockPos, v) {
    const event = new BlockDestroyEvent(survivalMode.actor, blockPos);
    if (exports.events.blockDestroy.fire(event) === common_1.CANCEL) {
        return false;
    }
    else {
        return _onBlockDestroy(survivalMode, blockPos, v);
    }
}
function onBlockDestroyCreative(gameMode, blockPos, v) {
    const event = new BlockDestroyEvent(gameMode.actor, blockPos);
    if (exports.events.blockDestroy.fire(event) === common_1.CANCEL) {
        return false;
    }
    else {
        return _onBlockDestroyCreative(gameMode, blockPos, v);
    }
}
const _onBlockDestroy = proc_1.procHacker.hooking("SurvivalMode::destroyBlock", bdsx_1.RawTypeId.Boolean, null, gamemode_1.SurvivalMode, blockpos_1.BlockPos, bdsx_1.RawTypeId.Int32)(onBlockDestroy);
const _onBlockDestroyCreative = proc_1.procHacker.hooking("GameMode::_creativeDestroyBlock", bdsx_1.RawTypeId.Boolean, null, gamemode_1.SurvivalMode, blockpos_1.BlockPos, bdsx_1.RawTypeId.Int32)(onBlockDestroyCreative);
class BlockPlaceEvent {
    constructor(player, block, blockSource, blockPos) {
        this.player = player;
        this.block = block;
        this.blockSource = blockSource;
        this.blockPos = blockPos;
    }
}
function onBlockPlace(blockSource, block, blockPos, v1, actor, v2) {
    const event = new BlockPlaceEvent(actor, block, blockSource, blockPos);
    if (exports.events.blockPlace.fire(event) === common_1.CANCEL) {
        return false;
    }
    else {
        return _onBlockPlace(blockSource, block, blockPos, v1, actor, v2);
    }
}
const _onBlockPlace = proc_1.procHacker.hooking("BlockSource::mayPlace", bdsx_1.RawTypeId.Boolean, null, block_1.BlockSource, block_1.Block, blockpos_1.BlockPos, bdsx_1.RawTypeId.Int32, bdsx_1.Actor, bdsx_1.RawTypeId.Boolean)(onBlockPlace);
class PlayerAttackEvent {
    constructor(player, victim) {
        this.player = player;
        this.victim = victim;
    }
}
function onPlayerAttack(player, victim) {
    const event = new PlayerAttackEvent(player, victim);
    if (exports.events.playerAttack.fire(event) === common_1.CANCEL) {
        return false;
    }
    else {
        return _onPlayerAttack(player, victim);
    }
}
const _onPlayerAttack = proc_1.procHacker.hooking("Player::attack", bdsx_1.RawTypeId.Boolean, null, player_1.Player, bdsx_1.Actor)(onPlayerAttack);
class PlayerDropItemEvent {
    constructor(player, itemStack) {
        this.player = player;
        this.itemStack = itemStack;
    }
}
function onPlayerDropItem(player, itemStack, v) {
    const event = new PlayerDropItemEvent(player, itemStack);
    if (exports.events.playerDropItem.fire(event) === common_1.CANCEL) {
        return false;
    }
    else {
        return _onPlayerDropItem(player, itemStack, v);
    }
}
const _onPlayerDropItem = proc_1.procHacker.hooking("Player::drop", bdsx_1.RawTypeId.Boolean, null, player_1.Player, inventory_1.ItemStack, bdsx_1.RawTypeId.Boolean)(onPlayerDropItem);
class PlayerJoinEvent {
    constructor(player) {
        this.player = player;
    }
}
bdsx_1.nethook.send(bdsx_1.MinecraftPacketIds.PlayStatus).on((pk, ni) => {
    if (pk.status === 3) {
        const event = new PlayerJoinEvent(ni.getActor());
        exports.events.playerJoin.fire(event);
    }
});
class PlayerPickupItemEvent {
    constructor(player) {
        this.player = player;
    }
}
function onPlayerPickupItem(player, itemActor, v1, v2) {
    const event = new PlayerPickupItemEvent(player /*, itemActor.itemStack*/);
    if (exports.events.playerPickupItem.fire(event) === common_1.CANCEL) {
        return false;
    }
    else {
        return _onPlayerPickupItem(player, itemActor, v1, v2);
    }
}
const _onPlayerPickupItem = proc_1.procHacker.hooking("Player::take", bdsx_1.RawTypeId.Boolean, null, player_1.Player, core_1.VoidPointer, bdsx_1.RawTypeId.Int32, bdsx_1.RawTypeId.Int32)(onPlayerPickupItem);
exports.events = {
    /** Cancellable */
    blockDestroy: new krevent_1.default(),
    /** Cancellable */
    blockPlace: new krevent_1.default(),
    /** Cancellable */
    playerAttack: new krevent_1.default(),
    /** Cancellable but only when player is in container screens*/
    playerDropItem: new krevent_1.default(),
    /** Not cancellable */
    playerJoin: new krevent_1.default(),
    /** Cancellable */
    playerPickupItem: new krevent_1.default(),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJldmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSwrQkFBcUU7QUFDckUsMENBQW9EO0FBQ3BELGdEQUE2QztBQUM3QyxnREFBMkQ7QUFDM0Qsa0RBQStDO0FBQy9DLDRDQUF5QztBQUN6Qyx3Q0FBMkM7QUFDM0Msd0NBQXFDO0FBQ3JDLG9DQUF3QztBQUN4QyxxQ0FBNEI7QUFNNUIsTUFBTSxpQkFBaUI7SUFDbkIsWUFDVyxNQUFjLEVBQ2QsUUFBa0I7UUFEbEIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLGFBQVEsR0FBUixRQUFRLENBQVU7SUFFN0IsQ0FBQztDQUNKO0FBQ0QsU0FBUyxjQUFjLENBQUMsWUFBeUIsRUFBRSxRQUFpQixFQUFFLENBQVE7SUFDMUUsTUFBTSxLQUFLLEdBQUcsSUFBSSxpQkFBaUIsQ0FBQyxZQUFZLENBQUMsS0FBZSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzVFLElBQUksY0FBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssZUFBTSxFQUFFO1FBQzVDLE9BQU8sS0FBSyxDQUFDO0tBQ2hCO1NBQU07UUFDSCxPQUFPLGVBQWUsQ0FBQyxZQUFZLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO0tBQ3JEO0FBQ0wsQ0FBQztBQUNELFNBQVMsc0JBQXNCLENBQUMsUUFBaUIsRUFBRSxRQUFpQixFQUFFLENBQVE7SUFDMUUsTUFBTSxLQUFLLEdBQUcsSUFBSSxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsS0FBZSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3hFLElBQUksY0FBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssZUFBTSxFQUFFO1FBQzVDLE9BQU8sS0FBSyxDQUFDO0tBQ2hCO1NBQU07UUFDSCxPQUFPLHVCQUF1QixDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDLENB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